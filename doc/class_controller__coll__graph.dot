digraph "Controller"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Controller\n||+ addSolver()\l+ connectSignals()\l+ Controller()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{QObject\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_solver" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Solver\n|+ m_gridFilename\l+ m_trackFilename\l# m_currentStep\l|+ buildRoadPath()\l+ filterSpace()\l+ filterTemp()\l+ getIndexFromRoadId()\l+ readFiles()\l+ setDistance()\l+ Solver()\l+ start()\l+ viterbiSetup()\l+ onSignalNeighbours()\l+ onSignalNextStep()\l+ onSignalSetGrid()\l+ onSignalSetTrack()\l+ onSignalStart()\l}",height=0.2,width=0.4,color="black",URL="$class_solver.html"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +grid" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Grid\n|# counter\l|+ addRoad()\l+ buildMarkovMatrix()\l+ computeDistanceFraction()\l+ getDistanceBetweenProjections()\l+ getDistanceToExtremity()\l+ getNoOfPoints()\l+ getNoOfRoads()\l+ getPoints()\l+ getProjectedPointAndDistance()\l+ getRoadEntry()\land 20 more...\l* m_xMin\l* m_xMax\l* m_yMin\l* m_yMax\l* m_xMinGrid\l* m_xMaxGrid\l* m_yMinGrid\l* m_yMaxGrid\l}",height=0.2,width=0.4,color="black",URL="$class_grid.html",tooltip="Grid embedded roads. This describes the network. "];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +m_vectorOfPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{std::vector\< PointRoad \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{PointRoad\n|# m_id\l# m_isNode\l# counter\l|+ id()\l+ infos()\l+ isNode()\l+ outputInfos()\l+ PointRoad()\l+ PointRoad()\l+ setid()\l+ updateBelongToRoad()\l+ vectorOfRoadId()\l}",height=0.2,width=0.4,color="black",URL="$class_point_road.html"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Point\n|# POINT_RADIUS\l|+ distanceToPoint()\l+ distanceToSegment()\l+ infos()\l+ Point()\l+ Point()\l+ projectionOnSegment()\l+ samePointAs()\l+ setx()\l+ x()\l+ ~Point()\l* m_x\l* m_y\l* x()\l* setx()\l* y()\l* sety()\l}",height=0.2,width=0.4,color="black",URL="$class_point.html",tooltip="The Point class. "];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" #m_vectorOfRoadId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{std::vector\< long \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_gridFullName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75",tooltip="STL class. "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{std::basic_string\<\l char \>\n||}",height=0.2,width=0.4,color="grey75",tooltip="STL class. "];
  Node11 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_mapOfExtPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{std::unordered_map\l\< PointRoad, int, hashFunc,\l equalsFunc \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +m_mapOfAllRoads" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{std::unordered_map\l\< long, Road \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{Road\n|# m_edgeId\l|+ addNeighbor()\l+ addPoint()\l+ edgeId()\l+ getIntersectionIDWith()\l+ getNoOfNeighbors()\l+ outputInfos()\l+ Road()\l+ Road()\l+ vectorOfPointsId()\l+ ~Road()\l}",height=0.2,width=0.4,color="black",URL="$class_road.html",tooltip="Road is an element of a network. Road are strongly linked with Points. "];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +m_setOfNeighbors" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{std::set\< long \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75"];
  Node15 -> Node13 [color="grey25",fontsize="10",style="solid",label=" #m_vectorOfPointsId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{std::vector\< int \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node16 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #T1\n#T2" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{std::vector\< std::vector\l\< float \> \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node17 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +track" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{Track\n||+ addPoint()\l+ applyThresholdToBox()\l+ delPointGPS()\l+ getNoOfPoints()\l+ getPoints()\l+ getPointsAsPointer()\l+ infos()\l+ outputInfos()\l+ readFromCSV()\l+ spaceFilter()\l+ temporalFilter()\l+ Track()\l+ updateBox()\l+ ~Track()\l* m_xMin\l* m_xMax\l* m_yMin\l* m_yMax\l}",height=0.2,width=0.4,color="black",URL="$class_track.html",tooltip="The Track class. "];
  Node2 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 -> Node17 [color="grey25",fontsize="10",style="solid",label=" #m_trackFullName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" #m_points" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{std::vector\< PointGPS * \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{PointGPS\n|# m_altitude\l# m_timeStamp\l|+ addEmissionProbability()\l+ altitude()\l+ infos()\l+ PointGPS()\l+ PointGPS()\l+ timeStamp()\l+ updateProbability()\l}",height=0.2,width=0.4,color="black",URL="$class_point_g_p_s.html"];
  Node7 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +m_emissionProbability" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{std::vector\< EmissionProbability \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{EmissionProbability\n|# m_distance\l# m_probability\l# m_roadId\l|+ distance()\l+ EmissionProbability()\l+ probability()\l+ roadId()\l+ updateProbability()\l}",height=0.2,width=0.4,color="black",URL="$class_emission_probability.html"];
  Node8 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #prevRoadIds\n#m_fromIndexToRoadId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +m_roadPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_fromRoadIdToIndex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{std::unordered_map\l\< long, int \>\n|+ elements\l+ keys\l|}",height=0.2,width=0.4,color="grey75"];
  Node19 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #prevPoint" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +m_trackPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +m_roads" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_qMapWidget" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{QMapWidget\n|+ m_next\l# m_controlZone\l# m_layout\l# m_play\l# m_startSimulation\l# m_view\l# m_zoom\l|+ buildControls()\l+ QMapWidget()\l+ onSignalDimension()\l+ onSignalItemToShow()\l- sceneScaleChanged()\l}",height=0.2,width=0.4,color="black",URL="$class_q_map_widget.html"];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node24 [label="{QWidget\n||}",height=0.2,width=0.4,color="grey75"];
  Node25 -> Node23 [color="grey25",fontsize="10",style="solid",label=" +m_scene" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{QMapScene\n|# m_height\l# m_scaleFactor\l# m_selectionCircle\l# m_shiftX\l# m_shiftY\l# m_width\l|+ highlightRoadsDefault()\l+ highlightSelectedPoint()\l+ initialize()\l+ QMapScene()\l+ setBackToDefault()\l+ setNeighborRoads()\l+ transform()\l+ onSignalAllPoints()\l+ onSignalAllRoads()\l+ onSignalCurrentPoint()\l+ onSignalRoadPath()\l+ onSignalStart()\l}",height=0.2,width=0.4,color="black",URL="$class_q_map_scene.html"];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node26 [label="{QGraphicsScene\n||}",height=0.2,width=0.4,color="grey75"];
  Node27 -> Node25 [color="grey25",fontsize="10",style="solid",label=" #pointItems" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{std::vector\< QGraphicsRect\lItem * \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node25 [color="grey25",fontsize="10",style="solid",label=" #m_neighboursId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node25 [color="grey25",fontsize="10",style="solid",label=" #m_roadPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node25 [color="grey25",fontsize="10",style="solid",label=" #m_trackPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node25 [color="grey25",fontsize="10",style="solid",label=" #m_roads" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_qProcessViewer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 [label="{QProcessViewer\n|+ closeButton\l+ startSolver\l+ textEdit\l|+ QProcessViewer()\l+ onSignalMessage()\l}",height=0.2,width=0.4,color="black",URL="$class_q_process_viewer.html"];
  Node24 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
}

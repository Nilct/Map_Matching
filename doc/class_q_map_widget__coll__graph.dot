digraph "QMapWidget"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{QMapWidget\n|+ m_next\l# m_controlZone\l# m_layout\l# m_play\l# m_startSimulation\l# m_view\l# m_zoom\l|+ buildControls()\l+ QMapWidget()\l+ onSignalDimension()\l+ onSignalItemToShow()\l- sceneScaleChanged()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{QWidget\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_scene" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{QMapScene\n|# m_height\l# m_scaleFactor\l# m_selectionCircle\l# m_shiftX\l# m_shiftY\l# m_width\l|+ highlightRoadsDefault()\l+ highlightSelectedPoint()\l+ initialize()\l+ QMapScene()\l+ setBackToDefault()\l+ setNeighborRoads()\l+ transform()\l+ onSignalAllPoints()\l+ onSignalAllRoads()\l+ onSignalCurrentPoint()\l+ onSignalRoadPath()\l+ onSignalStart()\l}",height=0.2,width=0.4,color="black",URL="$class_q_map_scene.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{QGraphicsScene\n||}",height=0.2,width=0.4,color="grey75"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #pointItems" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{std::vector\< QGraphicsRect\lItem * \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_neighboursId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{std::vector\< long \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_roadPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{std::vector\< PointRoad \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{PointRoad\n|# m_id\l# m_isNode\l# counter\l|+ id()\l+ infos()\l+ isNode()\l+ outputInfos()\l+ PointRoad()\l+ PointRoad()\l+ setid()\l+ updateBelongToRoad()\l+ vectorOfRoadId()\l}",height=0.2,width=0.4,color="black",URL="$class_point_road.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{Point\n|# POINT_RADIUS\l|+ distanceToPoint()\l+ distanceToSegment()\l+ infos()\l+ Point()\l+ Point()\l+ projectionOnSegment()\l+ samePointAs()\l+ setx()\l+ x()\l+ ~Point()\l* x()\l* setx()\l* y()\l* sety()\l* m_x\l* m_y\l}",height=0.2,width=0.4,color="black",URL="$class_point.html",tooltip="The Point class. "];
  Node6 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_vectorOfRoadId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_trackPoints" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{std::vector\< PointGPS * \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{PointGPS\n|# m_altitude\l# m_timeStamp\l|+ addEmissionProbability()\l+ altitude()\l+ infos()\l+ PointGPS()\l+ PointGPS()\l+ timeStamp()\l+ updateProbability()\l}",height=0.2,width=0.4,color="black",URL="$class_point_g_p_s.html"];
  Node9 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +m_emissionProbability" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{std::vector\< EmissionProbability \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{EmissionProbability\n|# m_distance\l# m_probability\l# m_roadId\l|+ distance()\l+ EmissionProbability()\l+ probability()\l+ roadId()\l+ updateProbability()\l}",height=0.2,width=0.4,color="black",URL="$class_emission_probability.html"];
  Node14 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_roads" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{std::unordered_map\l\< long, Road \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{Road\n|# m_edgeId\l|+ addNeighbor()\l+ addPoint()\l+ edgeId()\l+ getIntersectionIDWith()\l+ getNoOfNeighbors()\l+ outputInfos()\l+ Road()\l+ Road()\l+ vectorOfPointsId()\l+ ~Road()\l}",height=0.2,width=0.4,color="black",URL="$class_road.html",tooltip="Road is an element of a network. Road are strongly linked with Points. "];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" +m_setOfNeighbors" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{std::set\< long \>\n|+ keys\l|}",height=0.2,width=0.4,color="grey75"];
  Node17 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #m_vectorOfPointsId" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{std::vector\< int \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75"];
}
